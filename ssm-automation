schemaVersion: '0.3'
description: Docker Hardening and Validation Script from Nexus
assumeRole: '{{ automationAssumeRole }}'
parameters:
  automationAssumeRole:
    type: String
    description: (Optional) The ARN of the role that allows Automation to perform actions on your behalf.
    default: ''
  instanceIds:
    type: StringList
    description: List of EC2 instance IDs where the script will be executed.
  nexusRepoUrl:
    type: String
    description: The Nexus repository URL for the script.
    default: http://13.127.215.180:8081/repository/docker-hardening-script-upload/
mainSteps:
  - name: InstallDependencies
    action: aws:runCommand
    timeoutSeconds: 300
    nextStep: DownloadScript
    isEnd: false
    onFailure: Abort
    inputs:
      DocumentName: AWS-RunShellScript
      InstanceIds: '{{ instanceIds }}'
      Parameters:
        commands:
        - echo "Checking for unzip installation..."
        - |
          if ! command -v unzip &> /dev/null; then
            echo "unzip not found. Installing unzip...";
            sudo yum install -y unzip;
          else
            echo "unzip is already installed.";
          fi

  - name: DownloadScript
    action: aws:runCommand
    timeoutSeconds: 600
    nextStep: UnzipScript
    isEnd: false
    onFailure: Abort
    inputs:
      DocumentName: AWS-RunShellScript
      InstanceIds: '{{ instanceIds }}'
      Parameters:
        commands:
        - cd /opt  # Use /opt as it is a standard location for system-managed files
        - echo "Downloading script.zip from Nexus..."
        - curl -O "{{ nexusRepoUrl }}script.zip"
        
  - name: UnzipScript
    action: aws:runCommand
    timeoutSeconds: 300
    nextStep: RunMainScript
    isEnd: false
    onFailure: Abort
    inputs:
      DocumentName: AWS-RunShellScript
      InstanceIds: '{{ instanceIds }}'
      Parameters:
        commands:
        - echo "Checking if script.zip exists..."
        - |
          if [ -f /opt/script.zip ]; then
            echo "Unzipping the downloaded script...";
            mkdir -p /opt/docker-hardening-script  # Create directory if it doesn't exist
            unzip -o /opt/script.zip -d /opt/docker-hardening-script && echo "Script unzipped successfully." || echo "Failed to unzip script.zip.";
          else
            echo "script.zip not found!";
            exit 1;
          fi

  - name: RunMainScript
    action: aws:runCommand
    timeoutSeconds: 600
    nextStep: CleanUp
    isEnd: false
    onFailure: Abort
    inputs:
      DocumentName: AWS-RunShellScript
      InstanceIds: '{{ instanceIds }}'
      Parameters:
        commands:
        - echo "Running main-script.sh..."
        - cd /opt/docker-hardening-script/script
        - chmod +x main-script.sh
        - sudo ./main-script.sh | tee /opt/docker-hardening-script/report.txt  # Output the report to both STDOUT and a file
        - echo "Report generated and output to /opt/docker-hardening-script/report.txt."

  - name: CleanUp
    action: aws:runCommand
    timeoutSeconds: 300
    isEnd: true
    onFailure: Continue
    inputs:
      DocumentName: AWS-RunShellScript
      InstanceIds: '{{ instanceIds }}'
      Parameters:
        commands:
        - echo "Deleting downloaded script files..."
        - rm -rf /opt/docker-hardening-script /opt/script.zip
        - echo "Cleanup complete."
